{"version":3,"file":"static/js/249.c6fb6855.chunk.js","mappings":"uRAEaA,EAAUC,EAAAA,GAAAA,QAAH,6GAMPC,EAAYD,EAAAA,GAAAA,IAAH,mNAWTE,EAAaF,EAAAA,GAAAA,GAAH,wJ,SCqBvB,EApCiB,SAAC,GAMX,IALLG,EAKI,EALJA,eACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,OACAC,EACI,EADJA,cAEIC,EAAUD,EAAgBE,EAAAA,GAAWF,EAAgBG,EAAAA,GAEzD,OACE,SAACX,EAAD,WACE,UAACE,EAAD,YACE,gBAAKU,IAAKH,EAAOI,IAAKT,KACtB,4BACE,wBAAKA,KACL,wBAAI,YACJ,uBAAIE,KACJ,wBAAI,cACJ,uBAAID,KACJ,wBAAI,YACJ,SAACF,EAAD,UACGI,GAAUA,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAc,wBAAgBA,GAAPA,EAAvB,aAMjC,E,UC5BYC,EAAUf,EAAAA,GAAAA,OAAH,+sBA6BPD,EAAUC,EAAAA,GAAAA,IAAH,+KAQPgB,EAAQhB,EAAAA,GAAAA,GAAH,sDAGLiB,EAAcjB,EAAAA,GAAAA,GAAH,wDAIXkB,GAAUlB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,qlBC7BdoB,EAAU,CACd,CAAEC,KAAM,OAAQC,KAAM,QACtB,CAAED,KAAM,UAAWC,KAAM,YA4D3B,EAzDsB,WACpB,OAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAgBjB,IAdAC,EAAAA,EAAAA,YAAU,WACRP,GAAW,GACXQ,MAAM,sCAAD,OACmCP,EADnC,oBACsDQ,EAAAA,GADtD,oBAGFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJf,EAASe,EACV,IAIAC,SAAQ,kBAAMd,GAAW,EAAjB,GACZ,GAAE,CAACC,IACAF,EACF,OAAO,SAACgB,EAAA,EAAD,IAET,IAAQvC,EACNqB,EADMrB,eAAgBC,EACtBoB,EADsBpB,SAAUC,EAChCmB,EADgCnB,aAAcC,EAC9CkB,EAD8ClB,OAAQC,EACtDiB,EADsDjB,cAExD,OACE,iCACE,SAACQ,EAAD,CAAS4B,QAAS,0BAAMX,EAAQ,oBAACF,EAASc,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,IAAvC,EAAlB,UACE,SAAC,MAAD,CAAoBC,KAAK,UAE3B,SAAC,EAAD,CACE3C,eAAgBA,EAChBC,SAAUA,EACVC,aAAcA,EACdC,OAAQA,EACRC,cAAeA,KAEjB,UAAC,EAAD,YACE,SAACS,EAAD,UAAO,2BACP,SAACC,EAAD,UACGG,EAAQP,KAAI,gBAAGQ,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,yBACE,SAACJ,EAAD,CAAS6B,GAAI1B,EAAMuB,MAAOd,EAASc,MAAnC,SACGtB,KAFID,EADE,UASjB,SAAC,EAAA2B,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/FilmCard/FilmCard.styled.js","components/FilmCard/FilmCard.jsx","pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 25px;\n  padding-bottom: 25px;\n  border-bottom: 3px double #66ccff;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n\n  gap: 25px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieCard, GenresList, Section } from './FilmCard.styled';\nimport { NO_IMAGE, IMG_PATH } from 'utils/constans';\n\nconst FilmCard = ({\n  original_title,\n  overview,\n  vote_average,\n  genres,\n  backdrop_path,\n}) => {\n  let image = !!backdrop_path ? IMG_PATH + backdrop_path : NO_IMAGE;\n\n  return (\n    <Section>\n      <MovieCard>\n        <img src={image} alt={original_title} />\n        <div>\n          <h2>{original_title}</h2>\n          <h3>Rating</h3>\n          <p>{vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres && genres.map(({ name }) => <li key={name}>{name}</li>)}\n          </GenresList>\n        </div>\n      </MovieCard>\n    </Section>\n  );\n};\nFilmCard.propTypes = {\n  original_title: PropTypes.string,\n  overview: PropTypes.string,\n  vote_average: PropTypes.number,\n  genres: PropTypes.array,\n  backdrop_path: PropTypes.string,\n};\n\nexport default FilmCard;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BtnBack = styled.button`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: transparent;\n  border: 2px solid #66ccff;\n\n  &:hover,\n  :focus {\n    cursor: pointer;\n    background-color: #4abde3;\n    font-weight: 500;\n  }\n  &.active {\n    background-color: #4abde3;\n    font-weight: 500;\n    color: black;\n    box-shadow: rgba(0, 0, 0, 0.12) 4px 1px 4px, rgba(0, 0, 0, 0.06) 0px 4px 4px,\n      rgba(0, 0, 0, 0.16) 1px 4px 6px;\n  }\n  border: 2px solid rgb(102, 204, 255);\n  box-shadow: rgba(0, 0, 0, 0.12) 4px 1px 4px, rgba(0, 0, 0, 0.06) 0px 4px 4px,\n    rgba(0, 0, 0, 0.16) 1px 4px 6px;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-top: 25px;\n  padding-bottom: 25px;\n  border-bottom: 3px double #4abde3;\n`;\nexport const Title = styled.h3`\n  /* margin-bottom: 20px; */\n`;\nexport const BtnInfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n`;\nexport const BtnLink = styled(NavLink)`\n  color: black;\n  display: flex;\n  padding: 5px;\n\n  /* margin-left: 15 px; */\n\n  /* gap: 15 px; */\n  align-items: center;\n  justify-content: center;\n  width: 70px;\n  /* height: 40px; */\n  background-color: transparent;\n  border: 2px solid #4abde3;\n  border-radius: 5px;\n\n  &:hover,\n  active {\n    cursor: pointer;\n    background-color: #4abde3;\n    font-weight: 500;\n    color: black;\n  }\n\n  border: 2px solid rgb(102, 204, 255);\n  box-shadow: rgba(0, 0, 0, 0.12) 4px 1px 4px, rgba(0, 0, 0, 0.06) 0px 4px 4px,\n    rgba(0, 0, 0, 0.16) 1px 4px 6px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\n\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { API_KEY } from 'utils/constans';\nimport Loader from 'components/Loader/Loader';\nimport FilmCard from 'components/FilmCard';\nimport {\n  BtnBack,\n  Section,\n  Title,\n  BtnInfoList,\n  BtnLink,\n} from './MoviesDetails.styled';\n// const API_KEY = '7779282c18a7b23736a627b06c608831';\n\nconst btnLink = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    )\n      .then(response => response.json())\n      .then(data => {\n        setMovie(data);\n      })\n      // .catch(() => {\n      //   toast('Something went wrong');\n      // })\n      .finally(() => setLoading(false));\n  }, [movieId]);\n  if (loading) {\n    return <Loader />;\n  }\n  const { original_title, overview, vote_average, genres, backdrop_path } =\n    movie;\n  return (\n    <>\n      <BtnBack onClick={() => navigate(location.state?.from ?? '/')}>\n        <AiOutlineArrowLeft size=\"20\" />\n      </BtnBack>\n      <FilmCard\n        original_title={original_title}\n        overview={overview}\n        vote_average={vote_average}\n        genres={genres}\n        backdrop_path={backdrop_path}\n      />\n      <Section>\n        <Title>Aditional information</Title>\n        <BtnInfoList>\n          {btnLink.map(({ href, text }) => (\n            <li key={href}>\n              <BtnLink to={href} state={location.state}>\n                {text}\n              </BtnLink>\n            </li>\n          ))}\n        </BtnInfoList>\n      </Section>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["Section","styled","MovieCard","GenresList","original_title","overview","vote_average","genres","backdrop_path","image","IMG_PATH","NO_IMAGE","src","alt","map","name","BtnBack","Title","BtnInfoList","BtnLink","NavLink","btnLink","href","text","useState","movie","setMovie","loading","setLoading","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetch","API_KEY","then","response","json","data","finally","Loader","onClick","state","from","size","to","Suspense","fallback"],"sourceRoot":""}